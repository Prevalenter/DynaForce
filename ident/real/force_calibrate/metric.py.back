
import matplotlib.pyplot as plt
import numpy as np

def correlation_coefficient(y_true, y_pred):
    return np.corrcoef(y_true, y_pred)[0, 1]

def mse(y_true, y_pred):
    return ((y_true - y_pred) ** 2).mean()

from sklearn.metrics import mean_absolute_percentage_error as mape


if __name__ == '__main__':
    # load the data

    data_dir = 'data/thumb_vertical_long' # 'data/thumb_horizontal'
    pos = np.load(f'{data_dir}/pos_list.npy')[1010:1310]
    torque = np.load(f'{data_dir}/torque_list.npy')[1010:1310]
    time_list = np.load(f'{data_dir}/t_list.npy')[1010:1310]
    force = np.load(f'{data_dir}/force_list.npy')[1010:1310]
    pred_force_list = np.load(f'{data_dir}/force_pred_list.npy')[1000:1300]
    pred_force_no_momentum = np.load(f'{data_dir}/force_pred_raw_list.npy')[:300]
    pred_force_no_ident = np.load(f'{data_dir}/force_pred_no_ident.npy')[1000:1300]
    
    force = np.abs(force)

    
    print(pos.shape, torque.shape, time_list.shape, force.shape, pred_force_list.shape, 
          pred_force_no_momentum.shape, pred_force_no_ident.shape)

    print(force.max())
    
    print(pred_force_list.max(), pred_force_no_momentum.max(), pred_force_no_ident.max())
    
    pred_force_list_norm = np.linalg.norm(pred_force_list, axis=(1, 2))*10
    pred_force_no_momentum_norm = np.linalg.norm(pred_force_no_momentum, axis=(1, 2))*10
    pred_force_no_ident_norm = np.linalg.norm(pred_force_no_ident, axis=(1))*10
    
    print(pred_force_list_norm.shape, pred_force_no_momentum_norm.shape, pred_force_no_ident_norm.shape)
    
    
    plt.plot(pred_force_list_norm, c='r', label='pred_force_list_norm')
    plt.plot(pred_force_no_momentum_norm, c='b', label='pred_force_no_momentum_norm')
    plt.plot(pred_force_no_ident_norm, c='g', label='pred_force_no_ident_norm')
    plt.plot(force, c='k', label='force')
    plt.legend()
    plt.savefig('test.png', dpi=100)
    exit()
    # breakpoint()
        


    print(pred_force_list_norm.max(), pred_force_no_momentum_norm.max(), pred_force_no_ident_norm.max())
    
    print('-'*40)
    
    print(mse(force, pred_force_list_norm))
    print(mse(force, pred_force_no_momentum_norm))
    print(mse(force, pred_force_no_ident_norm))
    
    breakpoint()
    
    # print('-'*40)
    # # print the relative error
    # print(relative_error(force, pred_force_list_norm).mean())
    # print(relative_error(force, pred_force_no_momentum_norm).mean())
    # print(relative_error(force, pred_force_no_ident_norm).mean())

    # print('-'*40)
    # # print the correlation coefficient
    # print(correlation_coefficient(force, pred_force_list_norm))
    # print(correlation_coefficient(force, pred_force_no_momentum_norm))
    # print(correlation_coefficient(force, pred_force_no_ident_norm))

